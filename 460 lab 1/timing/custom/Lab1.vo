// Copyright (C) 1991-2008 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II"
// VERSION "Version 8.1 Build 163 10/28/2008 SJ Web Edition"

// DATE "02/16/2022 15:21:00"

// 
// Device: Altera EPF10K30ETC144-1 Package TQFP144
// 

// 
// This Verilog file should be used for Custom Verilog HDL only
// 

`timescale 1 ps/ 1 ps

module Lab1 (
	a,
	b,
	c,
	y);
input 	a;
input 	b;
input 	c;
output 	y;

wire gnd = 1'b0;
wire vcc = 1'b1;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("Lab1_v.sdo");
// synopsys translate_on

wire \a~dataout ;
wire \b~dataout ;
wire \c~dataout ;
wire \y~44_combout ;


// atom is at PIN_126
flex10ke_io \a~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\a~dataout ),
	.padio(a));
// synopsys translate_off
defparam \a~I .feedback_mode = "from_pin";
defparam \a~I .operation_mode = "input";
defparam \a~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_124
flex10ke_io \b~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\b~dataout ),
	.padio(b));
// synopsys translate_off
defparam \b~I .feedback_mode = "from_pin";
defparam \b~I .operation_mode = "input";
defparam \b~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_54
flex10ke_io \c~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\c~dataout ),
	.padio(c));
// synopsys translate_off
defparam \c~I .feedback_mode = "from_pin";
defparam \c~I .operation_mode = "input";
defparam \c~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at LC5_C19
flex10ke_lcell \y~44 (
// Equation(s):
// \y~44_combout  = \a~dataout  & !\b~dataout  & !\c~dataout  # !\a~dataout  & (\b~dataout  $ \c~dataout )

	.dataa(vcc),
	.datab(\a~dataout ),
	.datac(\b~dataout ),
	.datad(\c~dataout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\y~44_combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \y~44 .clock_enable_mode = "false";
defparam \y~44 .lut_mask = "033c";
defparam \y~44 .operation_mode = "normal";
defparam \y~44 .output_mode = "comb_only";
defparam \y~44 .packed_mode = "false";
// synopsys translate_on

// atom is at PIN_51
flex10ke_io \y~I (
	.datain(\y~44_combout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(y));
// synopsys translate_off
defparam \y~I .feedback_mode = "none";
defparam \y~I .operation_mode = "output";
defparam \y~I .reg_source_mode = "none";
// synopsys translate_on

endmodule
